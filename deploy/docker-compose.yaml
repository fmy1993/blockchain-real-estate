version: '2'
services:

  # 关注点
  # 1. 如何注入系统配置到容器中 环境变量注入
  # 2. 端口的映射关系
  # 3. 文件的映射

  orderer.blockchainrealestate.com:
    container_name: orderer.blockchainrealestate.com
    image: hyperledger/fabric-orderer:1.4.2
    environment:
      - ORDERER_GENERAL_LOGLEVEL=info # general.loglevel: debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0 # 服务暴露地址
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/config/genesis.block # 注入创世区块
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/orderer/msp # 证书相关
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050 # 17050:7050
    volumes:
      #- ./config/:/etc/hyperledger/config 这部分是生成的order节点需要的文件
      - ./config/genesis.block:/etc/hyperledger/config/genesis.block
      - ./crypto-config/ordererOrganizations/blockchainrealestate.com/orderers/orderer.blockchainrealestate.com/:/etc/hyperledger/orderer
      #挂载了order 节点的材料以及 创世区块
  peer0.org0.blockchainrealestate.com:
    #    extends:
    #      service: peer.base
    extends:
      file: docker-compose-base.yaml
      service: peer-base
    container_name: peer0.org0.blockchainrealestate.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org0.blockchainrealestate.com
      - CORE_PEER_LOCALMSPID=Org0MSP
      - CORE_PEER_ADDRESS=peer0.org0.blockchainrealestate.com:7051
    ports:
      - 7051:7051 # grpc服务端口   应该就是anchor节点
      - 7053:7053 # eventhub端口
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org0.blockchainrealestate.com/peers/peer0.org0.blockchainrealestate.com:/etc/hyperledger/peer
    depends_on:
      - orderer.blockchainrealestate.com

  peer1.org0.blockchainrealestate.com:
    #    extends:
    #      service: peer.base
    extends: # peer的镜像写在extends的files里的
      file: docker-compose-base.yaml # 其中定义了节点需要使用的数据库以及节点的msp证书等等
      service: peer-base
    container_name: peer1.org0.blockchainrealestate.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.org0.blockchainrealestate.com
      - CORE_PEER_LOCALMSPID=Org0MSP
      - CORE_PEER_ADDRESS=peer1.org0.blockchainrealestate.com:7051
    ports:
      - 17051:7051 #其他节点都是和anchor节点通信，注意端口号
      - 17053:7053
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org0.blockchainrealestate.com/peers/peer1.org0.blockchainrealestate.com:/etc/hyperledger/peer
    depends_on:
      - orderer.blockchainrealestate.com #依赖其他的容器

  peer0.org1.blockchainrealestate.com:
    #    extends:
    #      service: peer.base
    extends:
      file: docker-compose-base.yaml
      service: peer-base
    container_name: peer0.org1.blockchainrealestate.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org1.blockchainrealestate.com
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_ADDRESS=peer0.org1.blockchainrealestate.com:7051
    ports:
      - 27051:7051
      - 27053:7053
    volumes:  
      - /var/run/:/host/var/run/    # 后头是映射（挂载）到虚拟机的目录，没有host目录就自动创建一个,var/run是需要运行的环境
      - ./crypto-config/peerOrganizations/org1.blockchainrealestate.com/peers/peer0.org1.blockchainrealestate.com:/etc/hyperledger/peer
    depends_on:
      - orderer.blockchainrealestate.com

  peer1.org1.blockchainrealestate.com:
    #    extends:
    #      service: peer.base
    extends:
      file: docker-compose-base.yaml
      service: peer-base
    container_name: peer1.org1.blockchainrealestate.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.org1.blockchainrealestate.com
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_ADDRESS=peer1.org1.blockchainrealestate.com:7051
    ports:
      - 37051:7051
      - 37053:7053
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org1.blockchainrealestate.com/peers/peer1.org1.blockchainrealestate.com:/etc/hyperledger/peer
    depends_on:
      - orderer.blockchainrealestate.com

  peer0.org2.blockchainrealestate.com:
    #    extends:
    #      service: peer.base
    extends:
      file: docker-compose-base.yaml
      service: peer-base
    container_name: peer0.org2.blockchainrealestate.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org2.blockchainrealestate.com
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_ADDRESS=peer0.org2.blockchainrealestate.com:7051
    ports:
      - 47051:7051
      - 47053:7053
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org2.blockchainrealestate.com/peers/peer0.org2.blockchainrealestate.com:/etc/hyperledger/peer
    depends_on:
      - orderer.blockchainrealestate.com

  peer1.org2.blockchainrealestate.com:
    #    extends:
    #      service: peer.base
    extends:
      file: docker-compose-base.yaml
      service: peer-base
    container_name: peer1.org2.blockchainrealestate.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.org2.blockchainrealestate.com
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_ADDRESS=peer1.org2.blockchainrealestate.com:7051
    ports:
      - 57051:7051
      - 57053:7053
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org2.blockchainrealestate.com/peers/peer1.org2.blockchainrealestate.com:/etc/hyperledger/peer
    depends_on:
      - orderer.blockchainrealestate.com

  cli: # peer节点客户端 交易都是从客户端发起 需要用到User证书， 应该就是下面由environment段注入的环境变量，告诉容器证书以及其他一些信息
    container_name: cli
    image: hyperledger/fabric-tools:1.4.2 #镜像叫fabric tools，就是fabric提供的和通道交互的容，可以输入特定的命令 
    tty: true
    environment:
      - GOPATH=/opt/gopath  #这个容器自带了go环境,需要配置一个go的环境变量
      - CORE_LOGGING_LEVEL=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.blockchainrealestate.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/peer/users/Admin@org1.blockchainrealestate.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/  #就是进入容器里显示的路径
    command: /bin/bash
    volumes:
      - ./../chaincode:/opt/gopath/src/github.com/fmy1993/blockchain-real-estate/chaincode # 链码路径注入
      #- ./../chaincode:/opt/gopath/src/github.com/togettoyou/blockchain-real-estate/chaincode # 链码路径注入
      - ./config:/etc/hyperledger/config
      - ./crypto-config/peerOrganizations/org1.blockchainrealestate.com/:/etc/hyperledger/peer #volume

      # cli似乎是汇集了一些关键的路径，在start.sh脚本里也有体现，方便进行交互然后做一些操作